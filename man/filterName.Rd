% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_name.R
\name{filterName}
\alias{filterName}
\title{filterName}
\value{
filterName object with method for filtering all pairs of names to closest matches
}
\description{
Class for filtering names to closest matches
}
\examples{
filterer <- filterName$new(embedding_model = 'SamFrederick/namespace1m', k = 3)
filterer$filter_names(c('John Smith', 'Smith, Jonathan'), c('Smith, Johnny', 'Alex Marcus'))

## ------------------------------------------------
## Method `filterName$filter_names`
## ------------------------------------------------

filterer <- filterName$new(embedding_model = 'SamFrederick/namespace1m', k = 3)
filterer$filter_names(c('John Smith', 'Smith, Jonathan'), c('Smith, Johnny', 'Alex Marcus'))
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-filterName-new}{\code{filterName$new()}}
\item \href{#method-filterName-filter_names}{\code{filterName$filter_names()}}
\item \href{#method-filterName-clone}{\code{filterName$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-filterName-new"></a>}}
\if{latex}{\out{\hypertarget{method-filterName-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{filterName$new(
  embedding_model = "SamFrederick/namespace1m",
  return_sim = FALSE,
  device = "cpu",
  tokenizer = "roberta-large",
  k = NULL,
  threshold = NULL,
  match_name = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{embedding_model}}{string, default "SamFrederick/namematch1m". Embedding model to use for embedding names}

\item{\code{return_sim}}{boolean, default FALSE Whether to return cosine similarities between name pairs}

\item{\code{device}}{string, default "cpu". Can be "cpu", "cuda", "mps"}

\item{\code{tokenizer}}{string, default "roberta-large". A tokenizer with which to tokenize names for the embedding_model}

\item{\code{k}}{integer, optional, default NULL. The number of nearest neighbors to filter to. Must supply either k or threshold.}

\item{\code{threshold}}{double, optional, default NULL. Threshold of cosine similarity between names to filter to. Must supply either k or threshold.}

\item{\code{match_name}}{boolean, default TRUE. Whether the class will be used internally by matchName.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-filterName-filter_names"></a>}}
\if{latex}{\out{\hypertarget{method-filterName-filter_names}{}}}
\subsection{Method \code{filter_names()}}{
A method to filter all pairs of names between two vectors by cosine similarity
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{filterName$filter_names(name1, name2)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name1, name2}}{string vectors containing the names for which to calculate the cosine similarity. Constructs all possible pairs of name 1 and name 2 and filters based on cosine similarity}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
If match_name is TRUE, returns a list of vectors containing each name and the closest matches. If match_name = FALSE, returns a tibble with columns name1, name2, and sim
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{filterer <- filterName$new(embedding_model = 'SamFrederick/namespace1m', k = 3)
filterer$filter_names(c('John Smith', 'Smith, Jonathan'), c('Smith, Johnny', 'Alex Marcus'))
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-filterName-clone"></a>}}
\if{latex}{\out{\hypertarget{method-filterName-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{filterName$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
